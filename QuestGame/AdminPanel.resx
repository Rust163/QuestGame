<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cartUserPhotoPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>